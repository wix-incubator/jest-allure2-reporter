"use strict";(self.webpackChunk_wix_website_jest_allure2_reporter=self.webpackChunk_wix_website_jest_allure2_reporter||[]).push([[6500],{9180:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var s=n(5893),r=n(1151);const i={},a="Test Run",o={id:"api/config/test-run",title:"Test Run",description:"In jest-allure2-reporter, the testRun configuration object allows you to customize how the overall test run is reported in Allure.",source:"@site/../docs/api/config/06-test-run.mdx",sourceDirName:"api/config",slug:"/api/config/test-run",permalink:"/jest-allure2-reporter/api/config/test-run",draft:!1,unlisted:!1,editUrl:"https://github.com/wix-incubator/jest-allure2-reporter/tree/beta/docs/../docs/api/config/06-test-run.mdx",tags:[],version:"current",lastUpdatedBy:"Yaroslav Serhieiev",lastUpdatedAt:1725272598e3,sidebarPosition:6,frontMatter:{},sidebar:"apiSidebar",previous:{title:"Test File",permalink:"/jest-allure2-reporter/api/config/test-file"},next:{title:"Plugin API",permalink:"/jest-allure2-reporter/api/plugin-api"}},l={},u=[{value:"Default Configuration",id:"default-configuration",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Use Cases",id:"use-cases",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components},{ArticleHeader:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ArticleHeader",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"test-run",children:"Test Run"})}),"\n",(0,s.jsxs)(t.p,{children:["In ",(0,s.jsx)(t.code,{children:"jest-allure2-reporter"}),", the ",(0,s.jsx)(t.code,{children:"testRun"})," configuration object allows you to customize how the overall test run is reported in Allure.\nThis feature serves several important purposes:"]}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:"Providing a high-level summary of the entire test execution."}),"\n",(0,s.jsx)(t.li,{children:"Adding global metadata about the test environment including attachments, parameters, and links."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"default-configuration",children:"Default Configuration"}),"\n",(0,s.jsx)(n,{}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"testRun"})," configuration comes with sensible defaults:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"/** @type {import('jest-allure2-reporter').ReporterOptions} */\nconst defaultTestRunConfig = {\n  ignored: true,\n  historyId: (context) => /* package.json \"name\" */,\n  fullName: (context) =>  /* package.json \"name\" */,\n  displayName: '(test run)',\n  stage: ({ aggregatedResult }) => (aggregatedResult.wasInterrupted ? 'interrupted' : 'finished'),\n  status: ({ aggregatedResult }) => (aggregatedResult.numFailedTestSuites > 0 ? 'failed' : 'passed'),\n  parameters: {\n    'a) Suites passed': ({ aggregatedResult }) => aggregatedResult.numPassedTestSuites,\n    'b) Suites failed': ({ aggregatedResult }) => aggregatedResult.numFailedTestSuites,\n    'c) Suites broken': ({ aggregatedResult }) => aggregatedResult.numRuntimeErrorTestSuites,\n    'd) Suites pending': ({ aggregatedResult }) => aggregatedResult.numPendingTestSuites,\n  },\n  labels: {\n    thread: '00',\n  },\n};\n"})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"testRun"})," configuration object supports many of the same properties as ",(0,s.jsx)(t.code,{children:"testCase"})," and ",(0,s.jsx)(t.code,{children:"testFile"}),", but in the context of the entire test execution."]}),"\n",(0,s.jsxs)(t.p,{children:["By default, the test run is not reported as a test case, but if you want to report it, you can set ",(0,s.jsx)(t.code,{children:"ignored"})," to ",(0,s.jsx)(t.code,{children:"false"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,s.jsxs)(t.p,{children:["Here's an example of how you might customize the ",(0,s.jsx)(t.code,{children:"testRun"})," configuration:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"/** @type {import('jest-allure2-reporter').ReporterOptions} */\nconst jestAllure2ReporterOptions = {\n  testRun: {\n    displayName: ({ globalConfig }) => `Jest Run: ${path.basename(globalConfig.rootDir)}`,\n    parameters: {\n      'Node Version': process.version,\n      'OS': process.platform,\n    },\n    description: ({ aggregatedResult }) => {\n      const { numTotalTests, numPassedTests, numFailedTests, numPendingTests } = aggregatedResult;\n      return `\n        ## Test Run Summary\n        - **Total Tests**: ${numTotalTests}\n        - **Passed**: ${numPassedTests}\n        - **Failed**: ${numFailedTests}\n        - **Pending**: ${numPendingTests}\n        - **Duration**: ${(aggregatedResult.startTime - aggregatedResult.endTime) / 1000}s\n      `;\n    },\n    links: process.env.CI_BUILD_URL ? [\n      {\n        name: 'CI Build',\n        url: process.env.CI_BUILD_URL,\n      }\n    ] : [],\n    attachments: [\n      {\n        name: 'jest-config.json',\n        type: 'application/json',\n        content: JSON.stringify(globalConfig, null, 2),\n      },\n    ],\n  }\n};\n"})}),"\n",(0,s.jsx)(t.p,{children:"This configuration:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Customizes the display name to show only the base directory name"}),"\n",(0,s.jsx)(t.li,{children:"Adds parameters for Node version and OS."}),"\n",(0,s.jsx)(t.li,{children:"Provides a detailed summary of test results in the description"}),"\n",(0,s.jsx)(t.li,{children:"Adds links to CI build and Git commit (if available)"}),"\n",(0,s.jsx)(t.li,{children:"Attaches the Jest configuration as a JSON file"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Global Summary"}),": The test run configuration allows you to provide a high-level overview of all tests executed, including total counts, pass/fail ratios, and overall duration."]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Environment Information"}),": You can include details about the test environment, such as Node.js version, operating system, or any relevant environment variables.\nThe format of a pseudo-test case allows you to attach files, add parameters, and include links to external resources."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["By leveraging the ",(0,s.jsx)(t.code,{children:"testRun"})," configuration, you can provide valuable context and metadata for your entire test suite execution, making it easier to understand overall test results, troubleshoot issues, and maintain a clear picture of your testing process over time."]})]})}function c(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>a});var s=n(7294);const r={},i=s.createContext(r);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);