"use strict";(self.webpackChunk_wix_website_jest_allure2_reporter=self.webpackChunk_wix_website_jest_allure2_reporter||[]).push([[8831],{2091:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var n=s(5893),i=s(1151);const r={},o="Test File",l={id:"api/config/test-file",title:"Test File",description:"In jest-allure2-reporter, the testFile configuration object allows you to customize how test files are reported in Allure. This feature serves two primary purposes:",source:"@site/../docs/api/config/05-test-file.mdx",sourceDirName:"api/config",slug:"/api/config/test-file",permalink:"/jest-allure2-reporter/api/config/test-file",draft:!1,unlisted:!1,editUrl:"https://github.com/wix-incubator/jest-allure2-reporter/tree/beta/docs/../docs/api/config/05-test-file.mdx",tags:[],version:"current",lastUpdatedBy:"Yaroslav Serhieiev",lastUpdatedAt:1725272598e3,sidebarPosition:5,frontMatter:{},sidebar:"apiSidebar",previous:{title:"Test Step",permalink:"/jest-allure2-reporter/api/config/test-step"},next:{title:"Test Run",permalink:"/jest-allure2-reporter/api/config/test-run"}},a={},c=[{value:"Default Configuration",id:"default-configuration",level:2},{value:"Configuration Options",id:"configuration-options",level:2},{value:"Use Cases",id:"use-cases",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components},{ArticleHeader:s}=t;return s||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ArticleHeader",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"test-file",children:"Test File"})}),"\n",(0,n.jsxs)(t.p,{children:["In ",(0,n.jsx)(t.code,{children:"jest-allure2-reporter"}),", the ",(0,n.jsx)(t.code,{children:"testFile"})," configuration object allows you to customize how test files are reported in Allure. This feature serves two primary purposes:"]}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["Reporting ",(0,n.jsx)(t.code,{children:"testExecError"}),"s: When a test file fails to execute (due to syntax errors or other issues), this configuration allows you to report these errors effectively."]}),"\n",(0,n.jsx)(t.li,{children:"Providing file-level summaries: You can create summary reports for each file, including statistics like the number of passed, failed, broken, or skipped tests."}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"default-configuration",children:"Default Configuration"}),"\n",(0,n.jsx)(s,{}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"testFile"})," configuration comes with sensible defaults:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"/** @type {import('jest-allure2-reporter').ReporterOptions} */\nconst defaultTestFileConfig = {\n  ignored: ({ testFile }) => !testFile.testExecError,\n  historyId: ({ filePath }) => filePath.join('/'),\n  displayName: ({ filePath }) => filePath.join(path.sep),\n  fullName: ({ filePath }) => filePath.join(path.sep),\n  stage: ({ testFileMetadata, testFile }) => testFile.testExecError ? 'interrupted' : 'finished',\n  status: ({ testFileMetadata, testFile }) => testFile.testExecError ? 'broken' : testFile.numFailingTests > 0 ? 'failed' : 'passed',\n  labels: {\n    suite: '(test file execution)',\n  },\n};\n"})}),"\n",(0,n.jsx)(t.p,{children:"These defaults ensure that test file execution errors are reported, and provide a basic structure for file-level reporting."}),"\n",(0,n.jsx)(t.h2,{id:"configuration-options",children:"Configuration Options"}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"testFile"})," configuration object supports many of the same properties as ",(0,n.jsx)(t.code,{children:"testCase"}),", but in the context of an entire test file. Here's an example of how you might customize the ",(0,n.jsx)(t.code,{children:"testFile"})," configuration:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-javascript",children:"/** @type {import('jest-allure2-reporter').ReporterOptions} */\nconst jestAllure2ReporterOptions = {\n  testFile: {\n    ignored: false,\n    displayName: ({ filePath }) => {\n      return filePath.slice(1).join('/');\n    },\n    parameters: {\n      'Total tests': ({ testFile }) =>\n        testFile.numPassingTests +\n        testFile.numFailingTests +\n        testFile.numPendingTests,\n    },\n    description: ({ testFile, value = '' }) => {\n      const {\n        numPassingTests: passed,\n        numFailingTests: failed,\n        numPendingTests: pending,\n      } = testFile;\n      const summary = `**${passed}** passed, **${failed}** failed, **${pending}** pending`;\n      return summary + '\\n\\n' + value;\n    },\n  }\n};\n"})}),"\n",(0,n.jsx)(t.p,{children:"This configuration:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Ensures every test file gets reported (i.e., not ignored)"}),"\n",(0,n.jsx)(t.li,{children:"Customizes the display name to exclude the first part of the file path"}),"\n",(0,n.jsx)(t.li,{children:"Adds a 'Total tests' parameter"}),"\n",(0,n.jsx)(t.li,{children:"Provides a summary of test results in the description"}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Reporting Execution Errors"}),": By default, test files are only reported when there's a ",(0,n.jsx)(t.code,{children:"testExecError"}),". This ensures that syntax errors or other issues preventing test execution are captured in the Allure report."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"File-Level Summaries"}),": As shown in the example, you can create summaries for each test file, providing an overview of test results at a glance."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Custom Grouping"}),": By manipulating the ",(0,n.jsx)(t.code,{children:"displayName"})," and ",(0,n.jsx)(t.code,{children:"labels"}),", you can create custom groupings of tests in your Allure report based on file structure or other criteria."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Additional Context"}),": You can add file-specific parameters, links, or attachments to provide more context about the test file or its environment."]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["By leveraging the ",(0,n.jsx)(t.code,{children:"testFile"})," configuration, you can enhance your Allure reports with file-level insights, making it easier to understand test results and identify problematic areas in your test suite."]})]})}function u(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,t,s)=>{s.d(t,{Z:()=>l,a:()=>o});var n=s(7294);const i={},r=n.createContext(i);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);