"use strict";(self.webpackChunk_wix_website_jest_allure2_reporter=self.webpackChunk_wix_website_jest_allure2_reporter||[]).push([[910],{876:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var n=a(2784);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),u=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(a),d=r,h=p["".concat(i,".").concat(d)]||p[d]||m[d]||o;return a?n.createElement(h,l(l({ref:t},c),{},{components:a})):n.createElement(h,l({ref:t},c))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:r,l[1]=s;for(var u=2;u<o;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},3142:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(2784),r=a(6277);const o={tabItem:"tabItem_OMyP"};function l(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,l),hidden:a},t)}},2605:(e,t,a)=>{a.d(t,{Z:()=>w});var n=a(7896),r=a(2784),o=a(6277),l=a(5425),s=a(7267),i=a(4236),u=a(3432),c=a(9675);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function m(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??p(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function d(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:a}=e;const n=(0,s.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,i._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function f(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,o=m(e),[l,s]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!d({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[i,u]=h({queryString:a,groupId:n}),[p,f]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,c.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:n}),b=(()=>{const e=i??p;return d({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{b&&s(b)}),[b]);return{selectedValue:l,selectValue:(0,r.useCallback)((e=>{if(!d({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),f(e)}),[u,f,o]),tabValues:o}}var b=a(717);const y={tabList:"tabList_M0Dn",tabItem:"tabItem_ysIP"};function v(e){let{className:t,block:a,selectedValue:s,selectValue:i,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,l.o5)(),m=e=>{const t=e.currentTarget,a=c.indexOf(t),n=u[a].value;n!==s&&(p(t),i(n))},d=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>c.push(e),onKeyDown:d,onClick:m},l,{className:(0,o.Z)("tabs__item",y.tabItem,l?.className,{"tabs__item--active":s===t})}),a??t)})))}function g(e){let{lazy:t,children:a,selectedValue:n}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function k(e){const t=f(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",y.tabList)},r.createElement(v,(0,n.Z)({},e,t)),r.createElement(g,(0,n.Z)({},e,t)))}function w(e){const t=(0,b.Z)();return r.createElement(k,(0,n.Z)({key:String(t)},e))}},2492:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>u,toc:()=>p});var n=a(7896),r=(a(2784),a(876)),o=a(2605),l=a(3142);const s={sidebar_position:3,description:"Enhance your test reports with screenshots, videos, logs, and more."},i="Attachments",u={unversionedId:"annotations/attachments",id:"annotations/attachments",title:"Attachments",description:"Enhance your test reports with screenshots, videos, logs, and more.",source:"@site/../../docs/annotations/attachments.mdx",sourceDirName:"annotations",slug:"/annotations/attachments",permalink:"/jest-allure2-reporter/docs/annotations/attachments",draft:!1,editUrl:"https://github.com/wix-incubator/jest-allure2-reporter/tree/master/docs/../../docs/annotations/attachments.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"Enhance your test reports with screenshots, videos, logs, and more."},sidebar:"docsSidebar",previous:{title:"Steps",permalink:"/jest-allure2-reporter/docs/annotations/steps"},next:{title:"Parameters",permalink:"/jest-allure2-reporter/docs/annotations/parameters"}},c={},p=[{value:"Built-in attachment types",id:"built-in-attachment-types",level:2},{value:"Custom attachments",id:"custom-attachments",level:2}],m={toc:p},d="wrapper";function h(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"attachments"},"Attachments"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"This website version refers to the unreleased version of ",(0,r.kt)("inlineCode",{parentName:"p"},"jest-allure2-reporter")," and is not yet available\nanywhere. Please use GitHub docs for the latest stable version.")),(0,r.kt)("p",null,"Attachments are a powerful feature of Allure reports that can help make your tests much more informative. You can attach text logs, screenshots, configuration details, CSV files, and much more to your tests. These attachments can help you diagnose and debug failing tests."),(0,r.kt)("p",null,"There are several ways to add attachments to a test:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Using the ",(0,r.kt)("inlineCode",{parentName:"li"},"allure.attachment")," function"),(0,r.kt)("li",{parentName:"ul"},"Using the ",(0,r.kt)("inlineCode",{parentName:"li"},"allure.createAttachment")," function"),(0,r.kt)("li",{parentName:"ul"},"Using the ",(0,r.kt)("inlineCode",{parentName:"li"},"@Attachment")," decorator")),(0,r.kt)("h2",{id:"built-in-attachment-types"},"Built-in attachment types"),(0,r.kt)("p",null,"The simplest way to start with attachments is to use the built-in ones:"),(0,r.kt)(o.Z,{groupId:"approach",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"function",label:"Function",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { allure } from 'jest-allure2-reporter';\n\ntest('Sample test', async () => {\n  await allure.attachment('My attachment', 'This is a simple text attachment', 'text/plain');\n});\n")))),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"allure.attachment")," function takes three arguments: name of the attachment, content, and the content type. The content type must be a valid MIME type."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TODO: add screenshot")),(0,r.kt)("h2",{id:"custom-attachments"},"Custom attachments"),(0,r.kt)("p",null,"For advanced use cases, you may want to create your own custom attachments:"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"attachment",mdxType:"TabItem"},(0,r.kt)("p",null,"Using ",(0,r.kt)("inlineCode",{parentName:"p"},"allure.attachment")," function is the most straightforward way to add a custom attachment:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { allure } from 'jest-allure2-reporter';\n\ntest('Sample test', async () => {\n  const myData = JSON.stringify({a: 1, b: 2});\n  await allure.attachment('My JSON attachment', myData, 'application/json');\n});\n")),(0,r.kt)("p",null,"The disadvantage of this approach is that it is less flexible and more verbose for complex data.")),(0,r.kt)(l.Z,{value:"createAttachment",mdxType:"TabItem"},(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"allure.createAttachment")," function provides a more advanced way to define a custom attachment:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { allure } from 'jest-allure2-reporter';\n\nconst attachJson = allure.createAttachment('JSON attachment', (data) => {\n  return JSON.stringify(data);\n}, 'application/json');\n\ntest('Sample test', async () => {\n  const myData = {a: 1, b: 2};\n  attachJson(myData);\n});\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"allure.createAttachment")," function is particularly useful for reusable attachments.")),(0,r.kt)(l.Z,{value:"@Attachment",mdxType:"TabItem"},(0,r.kt)("p",null,"For aspect-oriented programmers, there is a decorator-based approach:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import { Attachment } from 'jest-allure2-reporter/annotations';\n\nclass DeviceHelper {\n  @Attachment('device-status-%s.json', 'application/json')\n  getStatus(deviceId) {\n    return { status: 'OK' };\n  }\n}\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"@Attachment")," decorator is similar to ",(0,r.kt)("inlineCode",{parentName:"p"},"allure.createAttachment")," but works only with class methods."))),(0,r.kt)("p",null,"Attachments allow you to enrich your test reports with additional context, which can be very useful when diagnosing and debugging failing tests."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TODO: add screenshot")))}h.isMDXComponent=!0}}]);