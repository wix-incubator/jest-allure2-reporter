"use strict";(self.webpackChunk_wix_website_jest_allure2_reporter=self.webpackChunk_wix_website_jest_allure2_reporter||[]).push([[2204],{2918:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>u});var s=n(5893),r=n(1151),o=n(3992),i=n(425);const a={description:"Make your tests more understandable with rich descriptions"},l="Descriptions",c={id:"docs/features/descriptions",title:"Descriptions",description:"Make your tests more understandable with rich descriptions",source:"@site/../docs/docs/features/01-descriptions.mdx",sourceDirName:"docs/features",slug:"/docs/features/descriptions",permalink:"/jest-allure2-reporter/docs/features/descriptions",draft:!1,unlisted:!1,editUrl:"https://github.com/wix-incubator/jest-allure2-reporter/tree/beta/docs/../docs/docs/features/01-descriptions.mdx",tags:[],version:"current",lastUpdatedBy:"Yaroslav Serhieiev",lastUpdatedAt:1723810744e3,sidebarPosition:1,frontMatter:{description:"Make your tests more understandable with rich descriptions"},sidebar:"docsSidebar",previous:{title:"Features",permalink:"/jest-allure2-reporter/docs/features/"},next:{title:"Steps",permalink:"/jest-allure2-reporter/docs/features/steps"}},d={},u=[{value:"Test cases",id:"test-cases",level:2},{value:"Test hooks",id:"test-hooks",level:2},{value:"Test suites",id:"test-suites",level:2},{value:"Test files",id:"test-files",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Description template",id:"description-template",level:3},{value:"Markdown support",id:"markdown-support",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components},{ArticleHeader:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ArticleHeader",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"descriptions",children:"Descriptions"})}),"\n",(0,s.jsx)(t.p,{children:"A well-written description can enhance the usefulness of a test by providing clear context and expected outcomes.\nAnyone who sees your test for the first time may benefit from a rich description."}),"\n",(0,s.jsx)(t.p,{children:"There are two ways to define a description for a test:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["declaratively, via ",(0,s.jsx)(t.code,{children:"@desc"}),", ",(0,s.jsx)(t.code,{children:"@description"}),", ",(0,s.jsx)(t.code,{children:"@descriptionHtml"})," docblocks (or even without them);"]}),"\n",(0,s.jsxs)(t.li,{children:["programmatically, via our DSL \u2013 ",(0,s.jsx)(t.code,{children:"$Description"})," or ",(0,s.jsx)(t.code,{children:"$DescriptionHtml"})," pseudo-decorators."]}),"\n"]}),"\n",(0,s.jsxs)(t.admonition,{title:"Note",type:"info",children:[(0,s.jsxs)(t.p,{children:["Descriptions are ",(0,s.jsx)(t.strong,{children:"not supported"})," on a ",(0,s.jsx)(t.em,{children:"suite"})," (",(0,s.jsx)(t.code,{children:"describe"}),") or ",(0,s.jsx)(t.em,{children:"test hooks"})," (",(0,s.jsx)(t.code,{children:"beforeAll"}),", ",(0,s.jsx)(t.code,{children:"beforeEach"}),", ",(0,s.jsx)(t.code,{children:"afterAll"}),", ",(0,s.jsx)(t.code,{children:"afterEach"}),") level due to limitations of Jest and Allure Framework."]}),(0,s.jsxs)(t.p,{children:["Anyway, we have a few workarounds for you down below. ","\ud83d\ude09"]})]}),"\n",(0,s.jsx)(t.h2,{id:"test-cases",children:"Test cases"}),"\n",(0,s.jsx)(n,{}),"\n",(0,s.jsx)(t.p,{children:"Allure Framework supports rich text descriptions for tests in Markdown and HTML formats."}),"\n",(0,s.jsxs)(t.p,{children:["To make your experience better, ",(0,s.jsx)(t.code,{children:"jest-allure2-reporter"})," appends a ",(0,s.jsx)(t.em,{children:"source code"})," of every\ntest to its description, so you can always get value from this feature."]}),"\n",(0,s.jsxs)(o.Z,{groupId:"approach",children:[(0,s.jsxs)(i.Z,{value:"docblock",label:"Docblocks",children:[(0,s.jsx)(t.admonition,{title:"Note",type:"info",children:(0,s.jsxs)(t.p,{children:["Docblocks must be ",(0,s.jsx)(t.strong,{children:"inside"})," the test function to work."]})}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"test('should add two numbers', () => {\n  /**\n   * This test demonstrates the `+` operator.\n   */\n  expect(1 + 2).toBe(3);\n});\n\ntest('should multiply two numbers', () => {\n  /**\n   * @description\n   * This test demonstrates the `*` operator.\n   */\n  expect(3 * 2).toBe(6);\n});\n\ntest('should subtract two numbers', () => {\n  /**\n   * @descriptionHtml\n   * This test demonstrates the <code>-</code> operator.\n   */\n  expect(2 - 1).toBe(1);\n});\n"})})]}),(0,s.jsxs)(i.Z,{value:"dsl",label:"DSL",children:[(0,s.jsx)(t.admonition,{title:"Note",type:"info",children:(0,s.jsxs)(t.p,{children:["Pseudo-annotations must be ",(0,s.jsx)(t.strong,{children:"before"})," the ",(0,s.jsx)(t.code,{children:"test"})," statement to work."]})}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import { $Description } from 'jest-allure2-reporter/api';\n\n$Description('This test demonstrates the `+` operator.')\ntest('should add two numbers', () => {\n  expect(1 + 2).toBe(3);\n});\n\n$DescriptionHtml('This test demonstrates the <code>-</code> operator.')\ntest('should subtract two numbers', () => {\n  expect(2 - 1).toBe(1);\n});\n"})})]}),(0,s.jsx)(i.Z,{value:"demo",label:"Preview",children:(0,s.jsx)(t.p,{children:"TODO: add screenshot"})})]}),"\n",(0,s.jsx)(t.h2,{id:"test-hooks",children:"Test hooks"}),"\n",(0,s.jsxs)(t.p,{children:["Test hooks such as ",(0,s.jsx)(t.code,{children:"beforeAll"}),", ",(0,s.jsx)(t.code,{children:"beforeEach"}),", ",(0,s.jsx)(t.code,{children:"afterAll"}),", ",(0,s.jsx)(t.code,{children:"afterEach"})," are treated ",(0,s.jsx)(t.a,{href:"/jest-allure2-reporter/docs/features/steps",children:"as steps"})," in Allure Framework. Therefore, they can have only a plain name, but no description."]}),"\n",(0,s.jsxs)(o.Z,{groupId:"approach",children:[(0,s.jsx)(i.Z,{value:"docblock",label:"Docblocks",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"beforeAll(() => {\n  /** This hook runs before all tests. */\n});\n\nbeforeEach(() => {\n  /** This hook runs before each test. */\n});\n\nafterEach(() => {\n  /** This hook runs after each test. */\n});\n"})})}),(0,s.jsx)(i.Z,{value:"dsl",label:"DSL",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import { $Description } from 'jest-allure2-reporter/api';\n\n$Description('This hook runs before all tests.')\nbeforeAll(() => {\n  // ...\n});\n\n$Description('This hook runs before each test.')\nbeforeEach(() => {\n  // ...\n});\n\n$Description('This hook runs after each test.')\nafterEach(() => {\n  // ...\n});\n"})})}),(0,s.jsx)(i.Z,{value:"demo",label:"Preview",children:(0,s.jsx)(t.p,{children:"TODO: add screenshot"})})]}),"\n",(0,s.jsx)(t.h2,{id:"test-suites",children:"Test suites"}),"\n",(0,s.jsx)(t.p,{children:"Allure Framework doesn't treat test suites as separate entities, so the best we can offer is to prepend their descriptions to every test within the suite."}),"\n",(0,s.jsx)(t.p,{children:"Due to Jest limitations, you can't use docblocks on a suite level, so the only way to add a description is to use our DSL."}),"\n",(0,s.jsxs)(o.Z,{groupId:"approach",children:[(0,s.jsx)(i.Z,{value:"dsl",label:"DSL",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import { $Description } from 'jest-allure2-reporter/api';\n\n$Description('The test is operating on `/login` page.')\ndescribe('Sanity: Login flow', () => {\n  it('should login with valid credentials', () => {\n    /** Testing the transition to the `/dashboard` page. */\n    // ...\n  });\n\n  it('should login with invalid credentials', () => {\n    /** Testing the validation summary component. */\n    // ...\n  });\n});\n"})})}),(0,s.jsx)(i.Z,{value:"demo",label:"Preview",children:(0,s.jsx)(t.p,{children:"TODO: add screenshot"})})]}),"\n",(0,s.jsx)(t.h2,{id:"test-files",children:"Test files"}),"\n",(0,s.jsxs)(t.p,{children:["In many cases you may find it acceptable to describe the whole test file, which usually is equal to adding a description to the top-level ",(0,s.jsx)(t.code,{children:"describe"})," block. More often than not you have a single top-level ",(0,s.jsx)(t.code,{children:"describe"})," block, so you won't notice the difference:"]}),"\n",(0,s.jsxs)(o.Z,{groupId:"approach",children:[(0,s.jsxs)(i.Z,{value:"docblock",label:"Docblocks",children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"/**\n * @description\n * The test is operating on `/login` page.\n */\nimport { $Description } from 'jest-allure2-reporter/api';\n\ndescribe('Sanity: Login flow', () => {\n  it('should login with valid credentials', () => {\n    /** Testing the transition to the `/dashboard` page. */\n    // ...\n  });\n\n  it('should login with invalid credentials', () => {\n    /** Testing the validation summary component. */\n    // ...\n  });\n});\n"})}),(0,s.jsx)(t.admonition,{title:"Note",type:"info",children:(0,s.jsxs)(t.p,{children:["You ",(0,s.jsx)(t.strong,{children:"must"})," use ",(0,s.jsx)(t.code,{children:"@desc"})," or ",(0,s.jsx)(t.code,{children:"@description"})," pragma due to Jest limitations regarding file-level docblocks."]})})]}),(0,s.jsxs)(i.Z,{value:"dsl",label:"DSL",children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import { allure } from 'jest-allure2-reporter/api';\n\nallure.description('The test is operating on `/login` page.')\n\ndescribe('Sanity: Login flow', () => {\n  it('should login with valid credentials', () => {\n    /** Testing the transition to the `/dashboard` page. */\n    // ...\n  });\n\n  it('should login with invalid credentials', () => {\n    /** Testing the validation summary component. */\n    // ...\n  });\n});\n"})}),(0,s.jsxs)(t.admonition,{title:"Note",type:"info",children:[(0,s.jsxs)(t.p,{children:["We use ",(0,s.jsx)(t.code,{children:"allure.description"})," to ensure that the metadata is added to exactly to the actual context, which is the ",(0,s.jsx)(t.strong,{children:"test file"})," itself."]}),(0,s.jsxs)(t.p,{children:["To simulate the behavior of ",(0,s.jsx)(t.code,{children:"$Description"})," pseudo-decorator, we'd have to put it inside the ",(0,s.jsx)(t.code,{children:"describe"})," block:"]}),(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"describe('Sanity: Login flow', () => {\n  allure.description('The test is operating on `/login` page.')\n  // ...\n});\n"})})]})]}),(0,s.jsx)(i.Z,{value:"demo",label:"Preview",children:(0,s.jsx)(t.p,{children:"TODO: add screenshot"})})]}),"\n",(0,s.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(t.h3,{id:"description-template",children:"Description template"}),"\n",(0,s.jsx)(t.p,{children:"As mentioned before, a test description is a sequence of user-defined paragraphs, followed by a source code of the test itself."}),"\n",(0,s.jsxs)(t.p,{children:["To customize the template, you can use ",(0,s.jsx)(t.code,{children:"description"})," option in your ",(0,s.jsx)(t.code,{children:"jest.config.js"}),". Below is a rough example of how you can do it:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"/** @type {import('@jest/types').Config.InitialOptions} */\nmodule.exports = {\n  testEnvironment: 'jest-allure2-reporter/environment-node',\n  reporters: [\n    'default',\n    [\n      'jest-allure2-reporter',\n      /** @type {import('jest-allure2-reporter').ReporterOptions} */\n      {\n        testCase: {\n          description: ({ testCaseMetadata }) => [\n            ...testCaseMetadata.description,\n            '```js',\n            ...(testCaseMetadata.code?.beforeAll ?? []),\n            ...(testCaseMetadata.code?.beforeEach ?? []),\n            ...(testCaseMetadata.code?.test ?? []),\n            ...(testCaseMetadata.code?.afterEach ?? []),\n            ...(testCaseMetadata.code?.afterAll ?? []),\n            '```',\n          ].join('\\n\\n'),\n        }\n      }\n  ],\n};\n"})}),"\n",(0,s.jsxs)(t.p,{children:["To switch to a HTML template, reset the ",(0,s.jsx)(t.code,{children:"description"})," customizer to\nreturn undefined and use ",(0,s.jsx)(t.code,{children:"descriptionHtml"})," option instead:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"/** @type {import('@jest/types').Config.InitialOptions} */\nmodule.exports = {\n  testEnvironment: 'jest-allure2-reporter/environment-node',\n  reporters: [\n    'default',\n    [\n      'jest-allure2-reporter',\n      /** @type {import('jest-allure2-reporter').ReporterOptions} */\n      {\n        testCase: {\n          description: () => {}, // suppress the default template\n          descriptionHtml: ({ testCaseMetadata }) => { /* ... */ },\n        }\n      }\n  ],\n};\n"})}),"\n",(0,s.jsx)(t.h3,{id:"markdown-support",children:"Markdown support"}),"\n",(0,s.jsxs)(t.p,{children:["By default, ",(0,s.jsx)(t.code,{children:"jest-allure2-reporter"})," uses ",(0,s.jsx)(t.code,{children:"remark"})," processor to render Markdown descriptions. It is not possible to customize it right now, but we're working on it."]}),"\n",(0,s.jsxs)(t.p,{children:["You'll be able to define your own ",(0,s.jsx)(t.code,{children:"remark"})," plugins and configure the processor in one of the next releases."]})]})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},425:(e,t,n)=>{n.d(t,{Z:()=>i});n(7294);var s=n(512);const r={tabItem:"tabItem_Ymn6"};var o=n(5893);function i(e){let{children:t,hidden:n,className:i}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,s.Z)(r.tabItem,i),hidden:n,children:t})}},3992:(e,t,n)=>{n.d(t,{Z:()=>y});var s=n(7294),r=n(512),o=n(2957),i=n(6550),a=n(1270),l=n(5238),c=n(3609),d=n(1027);function u(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,s.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:n,attributes:s,default:r}}=e;return{value:t,label:n,attributes:s,default:r}}))}(n);return function(e){const t=(0,c.lx)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(o),(0,s.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,o=h(e),[i,l]=(0,s.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const s=n.find((e=>e.default))??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:t,tabValues:o}))),[c,u]=m({queryString:n,groupId:r}),[f,j]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,d.Nk)(n);return[r,(0,s.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:r}),x=(()=>{const e=c??f;return p({value:e,tabValues:o})?e:null})();(0,a.Z)((()=>{x&&l(x)}),[x]);return{selectedValue:i,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),j(e)}),[u,j,o]),tabValues:o}}var j=n(1048);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=n(5893);function g(e){let{className:t,block:n,selectedValue:s,selectValue:i,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),d=e=>{const t=e.currentTarget,n=l.indexOf(t),r=a[n].value;r!==s&&(c(t),i(r))},u=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t),children:a.map((e=>{let{value:t,label:n,attributes:o}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,ref:e=>l.push(e),onKeyDown:u,onClick:d,...o,className:(0,r.Z)("tabs__item",x.tabItem,o?.className,{"tabs__item--active":s===t}),children:n??t},t)}))})}function v(e){let{lazy:t,children:n,selectedValue:o}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===o));return e?(0,s.cloneElement)(e,{className:(0,r.Z)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:i.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==o})))})}function w(e){const t=f(e);return(0,b.jsxs)("div",{className:(0,r.Z)("tabs-container",x.tabList),children:[(0,b.jsx)(g,{...t,...e}),(0,b.jsx)(v,{...t,...e})]})}function y(e){const t=(0,j.Z)();return(0,b.jsx)(w,{...e,children:u(e.children)},String(t))}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>i});var s=n(7294);const r={},o=s.createContext(r);function i(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);