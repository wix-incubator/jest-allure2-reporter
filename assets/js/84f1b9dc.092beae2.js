"use strict";(self.webpackChunk_wix_website_jest_allure2_reporter=self.webpackChunk_wix_website_jest_allure2_reporter||[]).push([[922],{1030:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>d,toc:()=>c});var t=r(2322),s=r(5392);const l={id:"index",title:"Module: index",sidebar_label:"index",sidebar_position:0,custom_edit_url:null},i=void 0,d={unversionedId:"reference/modules/index",id:"reference/modules/index",title:"Module: index",description:"Classes",source:"@site/../../docs/reference/modules/index.md",sourceDirName:"reference/modules",slug:"/reference/modules/",permalink:"/jest-allure2-reporter/reference/modules/",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"index",title:"Module: index",sidebar_label:"index",sidebar_position:0,custom_edit_url:null}},o={},c=[{value:"Classes",id:"classes",level:2},{value:"References",id:"references",level:2},{value:"default",id:"default",level:3},{value:"Type Aliases",id:"type-aliases",level:2},{value:"JestAllure2ReporterOptions",id:"jestallure2reporteroptions",level:3},{value:"Type declaration",id:"type-declaration",level:4},{value:"Defined in",id:"defined-in",level:4}];function a(e){const n=Object.assign({h2:"h2",ul:"ul",li:"li",a:"a",h3:"h3",p:"p",strong:"strong",code:"code",pre:"pre",h4:"h4",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,s.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"classes",children:"Classes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"../classes/.JestAllure2Reporter",children:"JestAllure2Reporter"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,t.jsx)(n.h3,{id:"default",children:"default"}),"\n",(0,t.jsxs)(n.p,{children:["Renames and re-exports ",(0,t.jsx)(n.a,{href:"../classes/.JestAllure2Reporter",children:"JestAllure2Reporter"})]}),"\n",(0,t.jsx)(n.h2,{id:"type-aliases",children:"Type Aliases"}),"\n",(0,t.jsx)(n.h3,{id:"jestallure2reporteroptions",children:"JestAllure2ReporterOptions"}),"\n",(0,t.jsxs)(n.p,{children:["\u01ac ",(0,t.jsx)(n.strong,{children:"JestAllure2ReporterOptions"}),": ",(0,t.jsx)(n.code,{children:"Object"})]}),"\n",(0,t.jsx)(n.p,{children:"Options to use with jest-allure2-reporter package in Jest config"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Example"})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"{\n *   // ...\n *   reporters: [\n *     'default',\n *     [\n *     'jest-allure2-reporter',\n *     {\n *       resultsDir: 'allure-results',\n *       packageName: 'my-package',\n *       errorsAsFailedAssertions: true,\n *     },\n * }\n"})}),"\n",(0,t.jsx)(n.h4,{id:"type-declaration",children:"Type declaration"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{align:"left",children:"Name"}),(0,t.jsx)(n.th,{align:"left",children:"Type"}),(0,t.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{align:"left",children:(0,t.jsx)(n.code,{children:"environmentInfo"})}),(0,t.jsxs)(n.td,{align:"left",children:[(0,t.jsx)(n.code,{children:"boolean"})," | ",(0,t.jsx)(n.code,{children:"JestAllure2Reporter$EnvironmentInfoCustomizer"})]}),(0,t.jsxs)(n.td,{align:"left",children:["Getter function to extract environment information from the test environment. By default, the environment information is extracted from the ",(0,t.jsx)(n.code,{children:"process.env"})," object. Use boolean ",(0,t.jsx)(n.code,{children:"false"})," to disable environment information. ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Default"})})," ",(0,t.jsx)(n.code,{children:"ts true "})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{align:"left",children:(0,t.jsx)(n.code,{children:"errorsAsFailedAssertions"})}),(0,t.jsx)(n.td,{align:"left",children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsxs)(n.td,{align:"left",children:["Treat thrown errors as failed assertions. By default, the reporter distinguishes between failed assertions and thrown errors. The former are reported as FAILED tests, the latter as BROKEN tests. ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Default"})})," ",(0,t.jsx)(n.code,{children:"ts false "})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{align:"left",children:(0,t.jsx)(n.code,{children:"executorInfo"})}),(0,t.jsxs)(n.td,{align:"left",children:[(0,t.jsx)(n.code,{children:"JestAllure2Reporter$TestCaseExtractor"}),"<",(0,t.jsx)(n.code,{children:"Allure$ExecutorInfo"}),">"]}),(0,t.jsx)(n.td,{align:"left",children:"Getter function to extract executor information from the test environment. The executor is the build agent or any other system that initiates the test run."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{align:"left",children:(0,t.jsx)(n.code,{children:"overwriteResultsDir"})}),(0,t.jsx)(n.td,{align:"left",children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsxs)(n.td,{align:"left",children:["Whether the reporter should delete the results directory before running tests. ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Default"})})," ",(0,t.jsx)(n.code,{children:"ts true "})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{align:"left",children:(0,t.jsx)(n.code,{children:"resultsDir"})}),(0,t.jsx)(n.td,{align:"left",children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsxs)(n.td,{align:"left",children:["Path to the directory where the report will be generated. ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"Default"})})," ",(0,t.jsx)(n.code,{children:"ts <rootDir>/allure-results "})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{align:"left",children:(0,t.jsx)(n.code,{children:"testInfo"})}),(0,t.jsxs)(n.td,{align:"left",children:[(0,t.jsx)(n.code,{children:"Partial"}),"<",(0,t.jsx)(n.code,{children:"JestAllure2Reporter$TestInfoCustomizer"}),">"]}),(0,t.jsx)(n.td,{align:"left",children:"-"})]})]})]}),"\n",(0,t.jsx)(n.h4,{id:"defined-in",children:"Defined in"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/wix-incubator/jest-allure2-reporter/blob/039baf3/packages/library/src/JestAllure2ReporterOptions.ts#L19",children:"packages/library/src/JestAllure2ReporterOptions.ts:19"})})]})}const h=function(e={}){const{wrapper:n}=Object.assign({},(0,s.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(a,e)})):a(e)}},5392:(e,n,r)=>{r.d(n,{Zo:()=>d,ah:()=>l});var t=r(2784);const s=t.createContext({});function l(e){const n=t.useContext(s);return t.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const i={};function d({components:e,children:n,disableParentContext:r}){let d;return d=r?"function"==typeof e?e({}):e||i:l(e),t.createElement(s.Provider,{value:d},n)}}}]);