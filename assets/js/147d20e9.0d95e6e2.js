"use strict";(self.webpackChunk_wix_website_jest_allure2_reporter=self.webpackChunk_wix_website_jest_allure2_reporter||[]).push([[2685],{1838:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"api/config/index","title":"Configuration","description":"The jest-allure2-reporter can be configured using the reporter options in your Jest configuration file.","source":"@site/../docs/api/config/index.mdx","sourceDirName":"api/config","slug":"/api/config/","permalink":"/jest-allure2-reporter/api/config/","draft":false,"unlisted":false,"editUrl":"https://github.com/wix-incubator/jest-allure2-reporter/tree/master/docs/../docs/api/config/index.mdx","tags":[],"version":"current","lastUpdatedBy":"Yaroslav Serhieiev","lastUpdatedAt":1749631045000,"sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"apiSidebar","previous":{"title":"Runtime API","permalink":"/jest-allure2-reporter/api/runtime-api"},"next":{"title":"Presets","permalink":"/jest-allure2-reporter/api/config/presets"}}');var t=s(4848),i=s(8453);const l={sidebar_position:6},c="Configuration",o={},a=[{value:"Basic Configuration",id:"basic-configuration",level:2},{value:"Reporter Options",id:"reporter-options",level:2},{value:"<code>overwrite</code>",id:"overwrite",level:3},{value:"<code>resultsDir</code>",id:"resultsdir",level:3},{value:"<code>injectGlobals</code>",id:"injectglobals",level:3},{value:"<code>attachments</code>",id:"attachments",level:3},{value:"<code>attachments.subDir</code>",id:"attachmentssubdir",level:4},{value:"<code>attachments.fileHandler</code>",id:"attachmentsfilehandler",level:4},{value:"<code>attachments.contentHandler</code>",id:"attachmentscontenthandler",level:4},{value:"<code>sourceCode</code>",id:"sourcecode",level:3},{value:"<code>categories</code>",id:"categories",level:3},{value:"<code>environment</code>",id:"environment",level:3},{value:"<code>executor</code>",id:"executor",level:3},{value:"<code>helpers</code>",id:"helpers",level:3},{value:"<code>testRun</code>",id:"testrun",level:3},{value:"<code>testFile</code>",id:"testfile",level:3},{value:"<code>testCase</code>",id:"testcase",level:3},{value:"<code>testStep</code>",id:"teststep",level:3},{value:"<code>writer</code>",id:"writer",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components},{ArticleHeader:s}=n;return s||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ArticleHeader",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"jest-allure2-reporter"})," can be configured using the reporter options in your Jest configuration file.\nThis reference outlines the available options and their usage."]}),"\n",(0,t.jsx)(n.h2,{id:"basic-configuration",children:"Basic Configuration"}),"\n",(0,t.jsx)(s,{}),"\n",(0,t.jsxs)(n.p,{children:["To use ",(0,t.jsx)(n.code,{children:"jest-allure2-reporter"}),", add it to your Jest configuration:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"/** @type {import('@jest/types').Config.InitialOptions} */\nmodule.exports = {\n  reporters: [\n    'default',\n    ['jest-allure2-reporter', {\n      // Reporter options go here\n    }],\n  ],\n  // Other Jest configurations...\n};\n"})}),"\n",(0,t.jsx)(n.h2,{id:"reporter-options",children:"Reporter Options"}),"\n",(0,t.jsx)(n.h3,{id:"overwrite",children:(0,t.jsx)(n.code,{children:"overwrite"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type: ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n",(0,t.jsxs)(n.li,{children:["Default: ",(0,t.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Determines whether to overwrite the existing results directory."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"overwrite: false\n"})}),"\n",(0,t.jsx)(n.h3,{id:"resultsdir",children:(0,t.jsx)(n.code,{children:"resultsDir"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type: ",(0,t.jsx)(n.code,{children:"string"})]}),"\n",(0,t.jsxs)(n.li,{children:["Default: ",(0,t.jsx)(n.code,{children:"'allure-results'"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Specifies the directory where test result files will be output."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"resultsDir: 'custom-allure-results'\n"})}),"\n",(0,t.jsx)(n.h3,{id:"injectglobals",children:(0,t.jsx)(n.code,{children:"injectGlobals"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type: ",(0,t.jsx)(n.code,{children:"boolean"})]}),"\n",(0,t.jsxs)(n.li,{children:["Default: ",(0,t.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Controls whether Allure's global variables are injected into the test environment."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"injectGlobals: false\n"})}),"\n",(0,t.jsx)(n.h3,{id:"attachments",children:(0,t.jsx)(n.code,{children:"attachments"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type: ",(0,t.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Configures how external attachments are attached to the report."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"attachments: {\n  subDir: 'attachments',\n  fileHandler: 'copy',\n  contentHandler: 'write'\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"attachmentssubdir",children:(0,t.jsx)(n.code,{children:"attachments.subDir"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type: ",(0,t.jsx)(n.code,{children:"string"})]}),"\n",(0,t.jsxs)(n.li,{children:["Default: ",(0,t.jsx)(n.code,{children:"'attachments'"})]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Defines a subdirectory within the ",(0,t.jsx)(n.code,{children:"resultsDir"})," where attachments will be stored."]}),"\n",(0,t.jsx)(n.h4,{id:"attachmentsfilehandler",children:(0,t.jsx)(n.code,{children:"attachments.fileHandler"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type: ",(0,t.jsx)(n.code,{children:"'copy' | 'move' | 'ref' | string"})]}),"\n",(0,t.jsxs)(n.li,{children:["Default: ",(0,t.jsx)(n.code,{children:"'ref'"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Specifies the default strategy for attaching files to the report by their path."}),"\n",(0,t.jsx)(n.h4,{id:"attachmentscontenthandler",children:(0,t.jsx)(n.code,{children:"attachments.contentHandler"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type: ",(0,t.jsx)(n.code,{children:"'write' | string"})]}),"\n",(0,t.jsxs)(n.li,{children:["Default: ",(0,t.jsx)(n.code,{children:"'write'"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Specifies the default strategy for attaching dynamic content to the report."}),"\n",(0,t.jsx)(n.h3,{id:"sourcecode",children:(0,t.jsx)(n.code,{children:"sourceCode"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type: ",(0,t.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Configures how source code and docblocks are extracted from test files."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"sourceCode: {\n  enabled: true,\n  plugins: {\n    // Plugin configurations\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"categories",children:(0,t.jsx)(n.code,{children:"categories"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type: ",(0,t.jsx)(n.code,{children:"function"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Configures the defect categories for the report."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"categories: ({ $ }) => [\n  {\n    name: 'Timeouts',\n    matchedStatuses: ['broken'],\n    messageRegex: /.*Exceeded timeout of.*/\n  }\n]\n"})}),"\n",(0,t.jsx)(n.h3,{id:"environment",children:(0,t.jsx)(n.code,{children:"environment"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type: ",(0,t.jsx)(n.code,{children:"function"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Configures the environment information that will be reported."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"environment: async ({ $ }) => ({\n  'Node.js Version': process.version,\n  'Package Version': await $.manifest(['name'], 'N/A'),\n})\n"})}),"\n",(0,t.jsx)(n.h3,{id:"executor",children:(0,t.jsx)(n.code,{children:"executor"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type: ",(0,t.jsx)(n.code,{children:"function"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Configures the executor information that will be reported."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"executor: ({ value }) => ({\n  name: 'Jenkins',\n  type: 'jenkins',\n  url: process.env.BUILD_URL,\n  buildOrder: process.env.BUILD_NUMBER\n})\n"})}),"\n",(0,t.jsx)(n.h3,{id:"helpers",children:(0,t.jsx)(n.code,{children:"helpers"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type: ",(0,t.jsx)(n.code,{children:"function"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Customizes extractor helpers object to use later in the customizers."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"helpers: ({ $ }) => ({\n  ...$.helpers,\n  customHelper: () => { /* ... */ }\n})\n"})}),"\n",(0,t.jsx)(n.h3,{id:"testrun",children:(0,t.jsx)(n.code,{children:"testRun"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type: ",(0,t.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Customizes how to report test runs (sessions) as pseudo-test cases."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"testRun: {\n  uuid: ({ aggregatedResult }) => aggregatedResult.testResults[0].testFilePath,\n  name: 'Custom Test Run Name'\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"testfile",children:(0,t.jsx)(n.code,{children:"testFile"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type: ",(0,t.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Customizes how to report test files as pseudo-test cases."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"testFile: {\n  name: ({ filePath }) => filePath.join('/'),\n  fullName: ({ filePath }) => filePath.join('.')\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"testcase",children:(0,t.jsx)(n.code,{children:"testCase"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type: ",(0,t.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Customizes how test cases are reported."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"testCase: {\n  name: ({ testCase }) => testCase.title,\n  fullName: ({ testCase }) => testCase.fullName,\n  labels: {\n    severity: 'normal',\n    tag: ['unit', 'integration']\n  },\n  links: {\n    issue: 'https://jira.company.com/browse/{{name}}'\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"teststep",children:(0,t.jsx)(n.code,{children:"testStep"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type: ",(0,t.jsx)(n.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Customizes how individual test steps are reported."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"testStep: {\n  name: ({ value }) => `Step: ${value}`,\n  status: ({ value }) => value === 'broken' ? 'failed' : value\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"writer",children:(0,t.jsx)(n.code,{children:"writer"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Type: ",(0,t.jsx)(n.code,{children:"string | Function | object | [string | Function, any]"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Customizes how test results are written to the filesystem. You can provide:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A path to a custom writer implementation"}),"\n",(0,t.jsx)(n.li,{children:"A writer class/constructor"}),"\n",(0,t.jsx)(n.li,{children:"A writer instance"}),"\n",(0,t.jsx)(n.li,{children:"An array with writer implementation and its options"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"// Using a custom writer class\nwriter: MyCustomWriter\n\n// Using a writer instance\nwriter: new MyCustomWriter({ url: 'mongodb://...' })\n\n// Using a path to writer implementation\nwriter: './my-writer.js'\n\n// Using a writer with options\nwriter: [MyCustomWriter, { batchSize: 100 }]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["By default, uses ",(0,t.jsx)(n.code,{children:"FileAllureWriter"})," from ",(0,t.jsx)(n.code,{children:"allure-store"})," package with the following configuration:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"writer: new FileAllureWriter({\n  overwrite: true,\n  resultsDirectory: 'allure-results'\n})\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can implement custom writers for various use cases like sending results via HTTP, storing in a database, or integrating with other systems. To do this, create a class implementing the ",(0,t.jsx)(n.code,{children:"AllureWriter"})," interface from ",(0,t.jsx)(n.code,{children:"allure-store"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { AllureWriter } from 'allure-store';\n\nclass MyCustomWriter implements AllureWriter {\n  async writeResult(result: AllureResult): Promise<void> {\n    await fetch('https://api.example.com/results', {\n      method: 'POST',\n      body: JSON.stringify(result)\n    });\n  }\n  // Implement other required methods...\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var r=s(6540);const t={},i=r.createContext(t);function l(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);