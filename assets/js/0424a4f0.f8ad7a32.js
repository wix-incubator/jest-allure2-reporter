"use strict";(self.webpackChunk_wix_website_jest_allure2_reporter=self.webpackChunk_wix_website_jest_allure2_reporter||[]).push([[763],{876:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(2784);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,f=p["".concat(i,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[p]="string"==typeof e?e:a,s[1]=l;for(var u=2;u<o;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3142:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(2784),a=n(6277);const o={tabItem:"tabItem_OMyP"};function s(e){let{children:t,hidden:n,className:s}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,s),hidden:n},t)}},2605:(e,t,n)=>{n.d(t,{Z:()=>w});var r=n(7896),a=n(2784),o=n(6277),s=n(5425),l=n(7267),i=n(4236),u=n(3432),c=n(9675);function p(e){return function(e){return a.Children.map(e,(e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function d(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??p(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:n}=e;const r=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(o),(0,a.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,o=d(e),[s,l]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=n.find((e=>e.default))??n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[i,u]=f({queryString:n,groupId:r}),[p,h]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,c.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:r}),b=(()=>{const e=i??p;return m({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{b&&l(b)}),[b]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),h(e)}),[u,h,o]),tabValues:o}}var b=n(717);const y={tabList:"tabList_M0Dn",tabItem:"tabItem_ysIP"};function k(e){let{className:t,block:n,selectedValue:l,selectValue:i,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,s.o5)(),d=e=>{const t=e.currentTarget,n=c.indexOf(t),r=u[n].value;r!==l&&(p(t),i(r))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:s}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:d},s,{className:(0,o.Z)("tabs__item",y.tabItem,s?.className,{"tabs__item--active":l===t})}),n??t)})))}function g(e){let{lazy:t,children:n,selectedValue:r}=e;const o=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function v(e){const t=h(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",y.tabList)},a.createElement(k,(0,r.Z)({},e,t)),a.createElement(g,(0,r.Z)({},e,t)))}function w(e){const t=(0,b.Z)();return a.createElement(v,(0,r.Z)({key:String(t)},e))}},6994:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>f,frontMatter:()=>l,metadata:()=>u,toc:()=>p});var r=n(7896),a=(n(2784),n(876)),o=n(2605),s=n(3142);const l={sidebar_position:2,description:"Fine-grained control over the test flow"},i="Steps",u={unversionedId:"annotations/steps",id:"annotations/steps",title:"Steps",description:"Fine-grained control over the test flow",source:"@site/../../docs/annotations/steps.mdx",sourceDirName:"annotations",slug:"/annotations/steps",permalink:"/jest-allure2-reporter/docs/annotations/steps",draft:!1,editUrl:"https://github.com/wix-incubator/jest-allure2-reporter/tree/master/docs/../../docs/annotations/steps.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"Fine-grained control over the test flow"},sidebar:"docsSidebar",previous:{title:"Description",permalink:"/jest-allure2-reporter/docs/annotations/description"},next:{title:"Attachments",permalink:"/jest-allure2-reporter/docs/annotations/attachments"}},c={},p=[{value:"Built-in hooks",id:"built-in-hooks",level:2},{value:"Custom steps",id:"custom-steps",level:2},{value:"Wrapping functions",id:"wrapping-functions",level:3},{value:"Instant steps",id:"instant-steps",level:3}],d={toc:p},m="wrapper";function f(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"steps"},"Steps"),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"This website version refers to the unreleased version of ",(0,a.kt)("inlineCode",{parentName:"p"},"jest-allure2-reporter")," and is not yet available\nanywhere. Please use GitHub docs for the latest stable version.")),(0,a.kt)("p",null,"Steps are the building blocks of your tests."),(0,a.kt)("p",null,"Each test is composed of one or more steps, and each step can have its own ",(0,a.kt)("a",{parentName:"p",href:"/jest-allure2-reporter/docs/features/statuses"},"status"),",\ndescription, ",(0,a.kt)("a",{parentName:"p",href:"/jest-allure2-reporter/docs/annotations/attachments"},"attachments")," and even nested steps."),(0,a.kt)("h2",{id:"built-in-hooks"},"Built-in hooks"),(0,a.kt)("p",null,"The simplest steps to start with are the built-in hooks in Jest: ",(0,a.kt)("inlineCode",{parentName:"p"},"beforeAll"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"beforeEach"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"afterEach")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"afterAll"),"."),(0,a.kt)("p",null,"This way, you will see the name and status of each hook in the report."),(0,a.kt)(o.Z,{groupId:"approach",mdxType:"Tabs"},(0,a.kt)(s.Z,{value:"jsdoc",label:"JSDoc",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"beforeAll(async () => {\n  /**\n    * Launch the browser for all tests\n    */\n});\n\nbeforeEach(async () => {\n  /**\n    * Visit the page before the test starts\n    */\n});\n\nafterEach(async () => {\n  /**\n    * Take a screenshot after each test\n    */\n});\n\nafterAll(async () => {\n  /**\n    * Close the browser after all tests\n    */\n});\n"))),(0,a.kt)(s.Z,{value:"dsl",label:"Function",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { $Description } from 'jest-allure2-reporter/annotations';\n\n$Description('Launch the browser for all tests')\nbeforeAll(async () => {\n  // ...\n});\n\n$Description('Visit the page before the test starts')\nbeforeEach(async () => {\n  // ...\n});\n\n$Description('Take a screenshot after each test')\nafterEach(async () => {\n  // ...\n});\n\n$Description('Close the browser after all tests')\nafterAll(async () => {\n  // ...\n});\n"))),(0,a.kt)(s.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"TODO: add screenshot\n")))),(0,a.kt)("h2",{id:"custom-steps"},"Custom steps"),(0,a.kt)("p",null,"Custom steps add more structure to your tests and make them easier to read and understand.\nYou can add additional information to the report such as step description, parameters, attachments, etc."),(0,a.kt)("p",null,"Moreover, custom steps can be nested, which allows you to create a tree-like structure of your tests."),(0,a.kt)("h3",{id:"wrapping-functions"},"Wrapping functions"),(0,a.kt)("p",null,"There are several ways to turn your functions into steps:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"allure.step")," function \u2013 best for anonymous, one-time steps."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"allure.createStep")," function \u2013 best for reusable functions."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"@Step")," decorator \u2013 best for reusable class methods.")),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(s.Z,{value:"step",mdxType:"TabItem"},(0,a.kt)("p",null,"Using ",(0,a.kt)("inlineCode",{parentName:"p"},"allure.step")," function is the simplest way to define a step:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { allure } from 'jest-allure2-reporter';\n\ntest('Login test', async () => {\n  await allure.step('Open login page', async () => {\n    // ...\n  });\n\n  await allure.step('Enter credentials', async () => {\n    allure.parameter('login', 'admin');\n    // ...\n  });\n\n  await allure.step('Submit the form', async () => {\n    // ...\n  });\n});\n")),(0,a.kt)("p",null,"The drawback of this approach is that you can't reuse steps in other tests.\nBesides, adding parameters is going to be a bit verbose.")),(0,a.kt)(s.Z,{value:"createStep",mdxType:"TabItem"},(0,a.kt)("p",null,"A more advanced technique is to wrap your functions with ",(0,a.kt)("inlineCode",{parentName:"p"},"allure.createStep"),",\nwhich allows you to reuse steps in other tests and add parameters:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { allure } from 'jest-allure2-reporter';\n\nexport const open = allure.createStep('Open login page', async () => {\n  // ...\n});\n\nexport const enterCredentials = allure.createStep(\n  'Enter credentials',\n  ['Login'],\n  async (login, password) => {\n    // ...\n  }\n);\n\nexport const submit = allure.createStep('Submit the form', async () => {\n  // ...\n});\n"))),(0,a.kt)(s.Z,{value:"@Step",mdxType:"TabItem"},(0,a.kt)("p",null,"For aspect-oriented programmers, there is a decorator-based approach. It works only with class methods,\nbut otherwise it's similar to ",(0,a.kt)("inlineCode",{parentName:"p"},"allure.createStep"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { Step } from 'jest-allure2-reporter/annotations';\n\nclass LoginPageObject {\n  @Step('Open login page')\n  async open() {\n    // ...\n  }\n\n  @Step('Enter credentials', ['Login'])\n  async enterCredentials(login, password) {\n    // ...\n  }\n\n  @Step('Submit the form')\n  async submit() {\n    // ...\n  }\n}\n"))),(0,a.kt)(s.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"TODO: add screenshot\n")))),(0,a.kt)("h3",{id:"instant-steps"},"Instant steps"),(0,a.kt)("p",null,"Sometimes you need to log a step in the middle of the test, for example, to add a screenshot when an exception is thrown. Use ",(0,a.kt)("inlineCode",{parentName:"p"},"allure.logStep")," function for this:"),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(s.Z,{value:"logStep",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { allure, Status } from 'jest-allure2-reporter';\n\ntest('Login test', async () => {\n  try {\n    // ...\n  } catch (error) {\n    allure.logStep('Unexpected error', Status.FAILED, [\n      {\n        name: 'screenshot',\n        content: await page.screenshot({ fullPage: true }),\n        type: 'image/png',\n      },\n    ]);\n\n    throw error;\n  }\n});\n"))),(0,a.kt)(s.Z,{value:"demo",label:"Demo",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"TODO: add screenshot\n")))),(0,a.kt)("p",null,"As you can see, ",(0,a.kt)("inlineCode",{parentName:"p"},"allure.logStep")," has an optional third parameter (TODO) for attachments. This is just one of possible ways to add attachments to the report. See ",(0,a.kt)("a",{parentName:"p",href:"/jest-allure2-reporter/docs/annotations/attachments"},"Attachments")," for more details."))}f.isMDXComponent=!0}}]);