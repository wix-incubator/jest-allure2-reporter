"use strict";(self.webpackChunk_wix_website_jest_allure2_reporter=self.webpackChunk_wix_website_jest_allure2_reporter||[]).push([[598],{4124:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>u});var s=n(2322),r=n(5392),i=n(2605),o=n(3142);const a={description:"Make your tests more understandable with rich descriptions"},l="Descriptions",c={unversionedId:"docs/api/descriptions",id:"docs/api/descriptions",title:"Descriptions",description:"Make your tests more understandable with rich descriptions",source:"@site/../../docs/docs/api/01-descriptions.mdx",sourceDirName:"docs/api",slug:"/docs/api/descriptions",permalink:"/jest-allure2-reporter/docs/api/descriptions",draft:!1,unlisted:!1,editUrl:"https://github.com/wix-incubator/jest-allure2-reporter/tree/master/docs/../../docs/docs/api/01-descriptions.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{description:"Make your tests more understandable with rich descriptions"},sidebar:"docsSidebar",previous:{title:"API",permalink:"/jest-allure2-reporter/docs/api/"},next:{title:"Steps",permalink:"/jest-allure2-reporter/docs/api/steps"}},d={},u=[{value:"Test cases",id:"test-cases",level:2},{value:"Test hooks",id:"test-hooks",level:2},{value:"Test suites",id:"test-suites",level:2},{value:"Configuration",id:"configuration",level:2}];function h(e){const t=Object.assign({h1:"h1",admonition:"admonition",p:"p",code:"code",ul:"ul",li:"li",strong:"strong",a:"a",h2:"h2",pre:"pre"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"descriptions",children:"Descriptions"}),"\n",(0,s.jsx)(t.admonition,{type:"caution",children:(0,s.jsxs)(t.p,{children:["This website version refers to the unreleased version of ",(0,s.jsx)(t.code,{children:"jest-allure2-reporter"})," and is not yet available\nanywhere. Please use GitHub docs for the latest stable version."]})}),"\n",(0,s.jsx)(t.p,{children:"A well-written description can enhance the usefulness of a test by providing clear context and expected outcomes. It can also assist in deciphering test failures."}),"\n",(0,s.jsx)(t.p,{children:"There are two ways to define a description for an executable block:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["declaratively, via ",(0,s.jsx)(t.code,{children:"@desc"}),", ",(0,s.jsx)(t.code,{children:"@description"}),", ",(0,s.jsx)(t.code,{children:"@descriptionHtml"})," JSDoc annotations (or even without them);"]}),"\n",(0,s.jsxs)(t.li,{children:["programmatically, via ",(0,s.jsx)(t.code,{children:"$Description('')"})," or ",(0,s.jsx)(t.code,{children:"$DescriptionHtml('')"})," annotation functions."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.strong,{children:"description"})," can be defined for the built-in ",(0,s.jsx)(t.code,{children:"it"}),", ",(0,s.jsx)(t.code,{children:"test"}),", ",(0,s.jsx)(t.code,{children:"beforeAll"}),", ",(0,s.jsx)(t.code,{children:"beforeEach"}),", ",(0,s.jsx)(t.code,{children:"afterAll"}),", ",(0,s.jsx)(t.code,{children:"afterEach"})," blocks and ",(0,s.jsx)(t.a,{href:"/jest-allure2-reporter/docs/api/steps",children:"custom steps"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"This article will focus on the built-in blocks."}),"\n",(0,s.jsx)(t.h2,{id:"test-cases",children:"Test cases"}),"\n",(0,s.jsx)(t.p,{children:"Allure Framework supports rich text descriptions for tests. But don't worry if you don't provide a description. The reporter will still present the test neatly by displaying the source code of the test."}),"\n",(0,s.jsxs)(i.Z,{groupId:"approach",children:[(0,s.jsx)(o.Z,{value:"jsdoc",label:"JSDoc",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"it('should add two numbers', () => {\n  /**\n    * _Implicit_ annotation without `@desc` or `@description`.\n    */\n  const a = 1;\n  const b = 2;\n  const sum = a + b;\n  expect(sum).toBe(3);\n});\n\nit('should subtract two numbers', () => {\n  /**\n    * @descriptionHtml\n    * <i>Explicit</i> annotation with <code>@descriptionHtml</code>.\n    */\n  const a = 1;\n  const b = 2;\n  const diff = b - a;\n  expect(diff).toBe(1);\n});\n"})})}),(0,s.jsx)(o.Z,{value:"dsl",label:"Function",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import { $Description } from 'jest-allure2-reporter/annotations';\n\n$Description('_Implicit_ annotation without `@desc` or `@description`.')\nit('should add two numbers', () => {\n  const a = 1;\n  const b = 2;\n  const sum = a + b;\n  expect(sum).toBe(3);\n});\n\n$DescriptionHtml('<i>Explicit</i> annotation with <code>@descriptionHtml</code>.')\nit('should subtract two numbers', () => {\n  const a = 1;\n  const b = 2;\n  const diff = b - a;\n  expect(diff).toBe(1);\n});\n"})})}),(0,s.jsx)(o.Z,{value:"demo",label:"Demo",children:(0,s.jsx)(t.p,{children:"TODO: add screenshot"})})]}),"\n",(0,s.jsx)(t.h2,{id:"test-hooks",children:"Test hooks"}),"\n",(0,s.jsxs)(t.p,{children:["Test hooks such as ",(0,s.jsx)(t.code,{children:"beforeAll"}),", ",(0,s.jsx)(t.code,{children:"beforeEach"}),", ",(0,s.jsx)(t.code,{children:"afterAll"}),", ",(0,s.jsx)(t.code,{children:"afterEach"})," can also have descriptions since technically they are considered ",(0,s.jsx)(t.a,{href:"/jest-allure2-reporter/docs/api/steps",children:"steps"})," in the Allure report."]}),"\n",(0,s.jsx)(t.p,{children:"However, they are limited to plain text descriptions only due to Allure Framework limitations."}),"\n",(0,s.jsxs)(i.Z,{groupId:"approach",children:[(0,s.jsx)(o.Z,{value:"jsdoc",label:"JSDoc",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"beforeAll(() => {\n  /** This hook runs before all tests. */\n});\n\nbeforeEach(() => {\n  /** @desc This hook runs before each test. */\n});\n\nafterEach(() => {\n  /**\n    * @description\n    * This hook runs after each test.\n    */\n});\n"})})}),(0,s.jsx)(o.Z,{value:"dsl",label:"Function",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import { $Description } from 'jest-allure2-reporter/annotations';\n\n$Description('This hook runs before all tests.')\nbeforeAll(() => {\n  // ...\n});\n\n$Description('This hook runs before each test.')\nbeforeEach(() => {\n  // ...\n});\n\n$Description('This hook runs after each test.')\nafterEach(() => {\n  // ...\n});\n"})})}),(0,s.jsx)(o.Z,{value:"demo",label:"Demo",children:(0,s.jsx)(t.p,{children:"TODO: add screenshot"})})]}),"\n",(0,s.jsx)(t.h2,{id:"test-suites",children:"Test suites"}),"\n",(0,s.jsxs)(t.p,{children:["Unfortunately, it is not possible to define a description for the entire test suite or an individual test suite (",(0,s.jsx)(t.code,{children:"describe"})," block) due to Allure Framework limitations."]}),"\n",(0,s.jsx)(t.p,{children:"However, if you add a description on top of the test suite, it will be prepended to every test description within the suite, e.g.:"}),"\n",(0,s.jsxs)(i.Z,{groupId:"approach",children:[(0,s.jsx)(o.Z,{value:"jsdoc",label:"JSDoc",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"describe('Sanity: Login flow', () => {\n  /** This description will be prepended to every test description. */\n\n  it('should login with valid credentials', () => {\n    /** This test logs in with valid credentials. */\n  });\n\n  it('should login with invalid credentials', () => {\n    /** This test logs in with invalid credentials. */\n  });\n});\n"})})}),(0,s.jsx)(o.Z,{value:"dsl",label:"Function",children:(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"import { $Description } from 'jest-allure2-reporter/annotations';\n\n$Description('This description will be prepended to every test description.')\ndescribe('Sanity: Login flow', () => {\n  $Description('This test logs in with valid credentials.')\n  it('should login with valid credentials', () => {\n  });\n\n  $Description('This test logs in with invalid credentials.')\n  it('should login with invalid credentials', () => {\n  });\n});\n"})})}),(0,s.jsx)(o.Z,{value:"demo",label:"Demo",children:(0,s.jsx)(t.p,{children:"TODO: add screenshot"})})]}),"\n",(0,s.jsx)(t.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsx)(t.admonition,{title:"Work in progress",type:"caution"}),"\n",(0,s.jsxs)(t.p,{children:["You can configure whether the source code of the test is included or not, using the ",(0,s.jsx)(t.code,{children:"includeSourceCode"})," and ",(0,s.jsx)(t.code,{children:"omitJSDoc"})," options. By default, both are set to ",(0,s.jsx)(t.code,{children:"true"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"As a result, the following test will be reported without JSDoc annotations:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"it('should add two numbers', () => {\n  /**\n    * This test adds two numbers.\n    */\n  const a = 1;\n  const b = 2;\n  const sum = a + b;\n  expect(sum).toBe(3);\n});\n"})}),"\n",(0,s.jsx)(t.p,{children:"TODO: See the configuration section for more details."})]})}const p=function(e={}){const{wrapper:t}=Object.assign({},(0,r.ah)(),e.components);return t?(0,s.jsx)(t,Object.assign({},e,{children:(0,s.jsx)(h,e)})):h(e)}},3142:(e,t,n)=>{n.d(t,{Z:()=>o});n(2784);var s=n(6277);const r={tabItem:"tabItem_OMyP"};var i=n(2322);function o(e){let{children:t,hidden:n,className:o}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,s.Z)(r.tabItem,o),hidden:n,children:t})}},2605:(e,t,n)=>{n.d(t,{Z:()=>y});var s=n(2784),r=n(6277),i=n(5425),o=n(7267),a=n(9065),l=n(4236),c=n(3432),d=n(9675);function u(e){return s.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,s.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:n,attributes:s,default:r}}=e;return{value:t,label:n,attributes:s,default:r}}))}(n);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:n}=e;const r=(0,o.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l._X)(i),(0,s.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(r.location.search);t.set(i,e),r.replace({...r.location,search:t.toString()})}),[i,r])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,i=h(e),[o,l]=(0,s.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const s=n.find((e=>e.default))??n[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:t,tabValues:i}))),[c,u]=b({queryString:n,groupId:r}),[f,m]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,i]=(0,d.Nk)(n);return[r,(0,s.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:r}),j=(()=>{const e=c??f;return p({value:e,tabValues:i})?e:null})();(0,a.Z)((()=>{j&&l(j)}),[j]);return{selectedValue:o,selectValue:(0,s.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),m(e)}),[u,m,i]),tabValues:i}}var m=n(717);const j={tabList:"tabList_M0Dn",tabItem:"tabItem_ysIP"};var x=n(2322);function v(e){let{className:t,block:n,selectedValue:s,selectValue:o,tabValues:a}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),d=e=>{const t=e.currentTarget,n=l.indexOf(t),r=a[n].value;r!==s&&(c(t),o(r))},u=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t),children:a.map((e=>{let{value:t,label:n,attributes:i}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,ref:e=>l.push(e),onKeyDown:u,onClick:d,...i,className:(0,r.Z)("tabs__item",j.tabItem,i?.className,{"tabs__item--active":s===t}),children:n??t},t)}))})}function g(e){let{lazy:t,children:n,selectedValue:r}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===r));return e?(0,s.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:i.map(((e,t)=>(0,s.cloneElement)(e,{key:t,hidden:e.props.value!==r})))})}function w(e){const t=f(e);return(0,x.jsxs)("div",{className:(0,r.Z)("tabs-container",j.tabList),children:[(0,x.jsx)(v,{...e,...t}),(0,x.jsx)(g,{...e,...t})]})}function y(e){const t=(0,m.Z)();return(0,x.jsx)(w,{...e,children:u(e.children)},String(t))}},5392:(e,t,n)=>{n.d(t,{Zo:()=>a,ah:()=>i});var s=n(2784);const r=s.createContext({});function i(e){const t=s.useContext(r);return s.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const o={};function a({components:e,children:t,disableParentContext:n}){let a;return a=n?"function"==typeof e?e({}):e||o:i(e),s.createElement(r.Provider,{value:a},t)}}}]);