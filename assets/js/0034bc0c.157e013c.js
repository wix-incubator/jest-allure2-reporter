"use strict";(self.webpackChunk_wix_website_jest_allure2_reporter=self.webpackChunk_wix_website_jest_allure2_reporter||[]).push([[5408],{6426:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"docs/config/statuses","title":"Statuses","description":"Have an informative overview of your test results.","source":"@site/../docs/docs/config/02-statuses.mdx","sourceDirName":"docs/config","slug":"/docs/config/statuses","permalink":"/jest-allure2-reporter/docs/config/statuses","draft":false,"unlisted":false,"editUrl":"https://github.com/wix-incubator/jest-allure2-reporter/tree/master/docs/../docs/docs/config/02-statuses.mdx","tags":[],"version":"current","lastUpdatedBy":"Yaroslav Serhieiev","lastUpdatedAt":1714818852000,"sidebarPosition":2,"frontMatter":{"description":"Have an informative overview of your test results.","verified":true},"sidebar":"docsSidebar","previous":{"title":"By Category","permalink":"/jest-allure2-reporter/docs/config/grouping/by-category"},"next":{"title":"Environment","permalink":"/jest-allure2-reporter/docs/config/environment"}}');var r=t(4848),o=t(8453);const i={description:"Have an informative overview of your test results.",verified:!0},d="Statuses",a={},l=[{value:"\ud83d\udfe2 Passed",id:"passed",level:2},{value:"\ud83d\udd34 Failed",id:"failed",level:2},{value:"\ud83d\udfe1 Broken",id:"broken",level:2},{value:"\u26aa Skipped",id:"skipped",level:2},{value:"\ud83d\udfe3 Unknown",id:"unknown",level:2}];function c(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components},{ArticleHeader:t}=s;return t||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ArticleHeader",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"statuses",children:"Statuses"})}),"\n",(0,r.jsx)(s.p,{children:"Jest Allure 2 Reporter supports all the standard statuses defined by the Allure Framework."}),"\n",(0,r.jsxs)(s.p,{children:["It provides a clear indication whether your test cases have ",(0,r.jsx)(s.a,{href:"#passed",children:(0,r.jsx)(s.code,{children:"passed"})}),", ",(0,r.jsx)(s.a,{href:"#failed",children:(0,r.jsx)(s.code,{children:"failed"})}),", were ",(0,r.jsx)(s.a,{href:"#broken",children:(0,r.jsx)(s.code,{children:"broken"})}),",\n",(0,r.jsx)(s.a,{href:"#skipped",children:(0,r.jsx)(s.code,{children:"skipped"})}),", or whether their status is ",(0,r.jsx)(s.a,{href:"#unknown",children:(0,r.jsx)(s.code,{children:"unknown"})}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"passed",children:"\ud83d\udfe2 Passed"}),"\n",(0,r.jsx)(t,{}),"\n",(0,r.jsxs)(s.p,{children:["Status ",(0,r.jsx)(s.code,{children:"passed"})," is reported when the test case has passed successfully:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:"test('passed test', () => {\n  expect(2 + 2).toBe(4);\n});\n"})}),"\n",(0,r.jsx)(s.h2,{id:"failed",children:"\ud83d\udd34 Failed"}),"\n",(0,r.jsxs)(s.p,{children:["Status ",(0,r.jsx)(s.code,{children:"failed"})," is reported when the test case has revealed a product defect, or it has invalid assertions:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:"test('failed test', () => {\n  expect(2 + 2).not.toBe(4);\n});\n"})}),"\n",(0,r.jsx)(s.admonition,{type:"tip",children:(0,r.jsxs)(s.p,{children:["You can build a ",(0,r.jsx)(s.a,{href:"/jest-allure2-reporter/docs/config/errors#defect-categories",children:"custom defects classification"})," system based on\ntest status, error messages, and stack traces."]})}),"\n",(0,r.jsx)(s.h2,{id:"broken",children:"\ud83d\udfe1 Broken"}),"\n",(0,r.jsxs)(s.p,{children:["Status ",(0,r.jsx)(s.code,{children:"broken"})," is reported when the test case has failed due to an error in the test code:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:"test('broken test', () => {\n  const user = null;\n  // TypeError: Cannot read property 'name' of null\n  expect(user.name).toBe('John');\n});\n"})}),"\n",(0,r.jsxs)(s.admonition,{type:"tip",children:[(0,r.jsxs)(s.p,{children:["If your test assertions ",(0,r.jsx)(s.em,{children:"throw errors directly"})," instead of using or extending\nJest's ",(0,r.jsxs)(s.a,{href:"https://jestjs.io/docs/expect",children:[(0,r.jsx)(s.code,{children:"expect"})," API"]}),", they will be reported as \u2060\ud83d\udfe1\xa0Broken tests by default."]}),(0,r.jsxs)(s.p,{children:["To report them as \ud83d\udd34\xa0Failed tests, you can use a ",(0,r.jsx)(s.code,{children:"status"})," customizer function:"]}),(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",metastring:'title="jest.config.js"',children:"module.exports = {\n  // ...\n  reporters: [\n    // ...\n    ['jest-allure2-reporter', {\n      testCase: {\n        // highlight-next-line\n        status: ({ value }) => value === 'broken' ? 'failed' : value,\n      },\n    }],\n  ],\n};\n"})})]}),"\n",(0,r.jsx)(s.h2,{id:"skipped",children:"\u26aa Skipped"}),"\n",(0,r.jsxs)(s.p,{children:["Status ",(0,r.jsx)(s.code,{children:"skipped"})," is reported when the test case has been skipped due to a ",(0,r.jsx)(s.code,{children:"test.skip"})," or ",(0,r.jsx)(s.code,{children:"test.todo"})," call:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:"test.skip('skipped test', () => {\n  expect(2 + 2).toBe(4);\n});\n\ntest.todo('todo test');\n"})}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsxs)(s.p,{children:["There's no way to distinguish between ",(0,r.jsx)(s.code,{children:"test.skip"})," and ",(0,r.jsx)(s.code,{children:"test.todo"})," calls, so both will be reported as skipped."]})}),"\n",(0,r.jsx)(s.h2,{id:"unknown",children:"\ud83d\udfe3 Unknown"}),"\n",(0,r.jsxs)(s.p,{children:["Status ",(0,r.jsx)(s.code,{children:"unknown"})," is reported when information about the test case result has been lost or not created:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-js",children:"test('unknown test', () => {\n  process.exit(0); // the test information will be unrecoverable\n});\n"})}),"\n",(0,r.jsx)(s.admonition,{type:"info",children:(0,r.jsxs)(s.p,{children:["In the real world scenarios, this might happen if you use ",(0,r.jsx)(s.code,{children:"--bail"})," in Jest with\nmultiple test suites running in parallel, and one of them fails. In this case,\nJest will exit immediately, and the reporter will not be able to wait for the\ntest results from the other workers."]})})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>d});var n=t(6540);const r={},o=n.createContext(r);function i(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);