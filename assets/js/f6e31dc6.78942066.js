"use strict";(self.webpackChunk_wix_website_jest_allure2_reporter=self.webpackChunk_wix_website_jest_allure2_reporter||[]).push([[242],{2182:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>n,metadata:()=>l,toc:()=>d});var s=r(5893),i=r(1151);const n={description:"Distinguish between types of test failures."},o="Error handling \ud83d\udea7",l={unversionedId:"docs/config/errors",id:"docs/config/errors",title:"Error handling \ud83d\udea7",description:"Distinguish between types of test failures.",source:"@site/../docs/docs/config/07-errors.mdx",sourceDirName:"docs/config",slug:"/docs/config/errors",permalink:"/jest-allure2-reporter/docs/config/errors",draft:!1,unlisted:!1,editUrl:"https://github.com/wix-incubator/jest-allure2-reporter/tree/alpha/docs/../docs/docs/config/07-errors.mdx",tags:[],version:"current",sidebarPosition:7,frontMatter:{description:"Distinguish between types of test failures."},sidebar:"docsSidebar",previous:{title:"History",permalink:"/jest-allure2-reporter/docs/config/history"},next:{title:"API",permalink:"/jest-allure2-reporter/docs/api/"}},a={},d=[{value:"Defect categories",id:"defect-categories",level:2},{value:"<code>beforeAll</code> and <code>afterAll</code> hooks",id:"beforeall-and-afterall-hooks",level:2},{value:"<code>--bail</code> option",id:"--bail-option",level:2},{value:"Early failures",id:"early-failures",level:2}];function c(e){const t=Object.assign({h1:"h1",admonition:"admonition",p:"p",code:"code",h2:"h2",ul:"ul",li:"li",pre:"pre"},(0,i.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"error-handling-",children:"Error handling \ud83d\udea7"}),"\n",(0,s.jsx)(t.admonition,{type:"caution",children:(0,s.jsxs)(t.p,{children:["This website version refers to the unreleased version of ",(0,s.jsx)(t.code,{children:"jest-allure2-reporter"}),", partially available as ",(0,s.jsx)(t.code,{children:"2.0.0-alpha.*"})," release.\nPlease use GitHub docs for the latest stable version, ",(0,s.jsx)(t.code,{children:"1.x.x"}),"."]})}),"\n",(0,s.jsx)(t.admonition,{type:"danger",children:(0,s.jsx)(t.p,{children:"This article is just a draft. It is not yet complete, and you should not read it meanwhile :)"})}),"\n",(0,s.jsx)(t.p,{children:"There are a few things to know about Jest failures and how they are reported to Allure."}),"\n",(0,s.jsx)(t.h2,{id:"defect-categories",children:"Defect categories"}),"\n",(0,s.jsxs)(t.h2,{id:"beforeall-and-afterall-hooks",children:[(0,s.jsx)(t.code,{children:"beforeAll"})," and ",(0,s.jsx)(t.code,{children:"afterAll"})," hooks"]}),"\n",(0,s.jsx)(t.p,{children:"Jest's test runner lifecycle is not similar to Java testing frameworks, therefore some concepts do not translate well. Here are some things to keep in mind:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["a failure in a ",(0,s.jsx)(t.code,{children:"beforeAll"})," hook will be reported as a test failure for all tests in the suite. (TODO: check if this is true for ",(0,s.jsx)(t.code,{children:"afterAll"})," as well)","\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"TODO: add a screenshot\n"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["a ",(0,s.jsx)(t.code,{children:"beforeAll"})," hook is not considered a test, so it will not be reported as a test in Allure. The only sane place to report it is as the first step of the first test in the suite.","\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"TODO: add a screenshot\n"})}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["even this approach is not perfect, especially when you use ",(0,s.jsx)(t.code,{children:"jest.retryTimes()"})," \u2013 if the first test is retried, the ",(0,s.jsx)(t.code,{children:"beforeAll"}),' step will be reported only once, whereas the test will be reported multiple times in "Retries" section.',"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"TODO: add a screenshot\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.h2,{id:"--bail-option",children:[(0,s.jsx)(t.code,{children:"--bail"})," option"]}),"\n",(0,s.jsxs)(t.p,{children:["If you use the ",(0,s.jsx)(t.code,{children:"--bail"})," option, Jest will stop running tests after the first failure. This is useful for debugging, but it also means that you will not see all the failures in the report, and the report itself might be incomplete."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"TODO: add a screenshot\n"})}),"\n",(0,s.jsx)(t.h2,{id:"early-failures",children:"Early failures"}),"\n",(0,s.jsx)(t.p,{children:"If your test environment setup fails, Jest will not run any tests. If your test file has syntax errors, Jest even won't be able to understand which tests are defined in the file. Therefore, the only way to report these failures is to report them as a test case failure."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"TODO: add a screenshot\n"})}),"\n",(0,s.jsx)(t.p,{children:"TODO: how to configure this?"})]})}const h=function(e={}){const{wrapper:t}=Object.assign({},(0,i.ah)(),e.components);return t?(0,s.jsx)(t,Object.assign({},e,{children:(0,s.jsx)(c,e)})):c(e)}},1151:(e,t,r)=>{r.d(t,{Zo:()=>l,ah:()=>n});var s=r(7294);const i=s.createContext({});function n(e){const t=s.useContext(i);return s.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const o={};function l({components:e,children:t,disableParentContext:r}){let l;return l=r?"function"==typeof e?e({}):e||o:n(e),s.createElement(i.Provider,{value:l},t)}}}]);